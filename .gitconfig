[user]
	# name = xxx
	# email = xxx@sample.com
[merge]
    ff = false
	ff = false
	ff = false
[pull]
    ff = only
	ff = only
	ff = only
	ff = only
[fetch]
    prune = true
[push]
    default = simple
[pager]
    log = diff-highlight | less -FX
    reflog = diff-highlight | less -FX
    show = diff-highlight | less -FX
    diff = diff-highlight | less -FX
    tag = diff-highlight | less -FX
[alias]
    alias = config --get-regexp 'alias.*'
    me = config --get-regexp 'user.*'
    lme = config --local --get-regexp 'user.*'
    st = status
    sta = status -uall
    ss = stash save
    sp = stash pop
    co = checkout
    sw = switch
    work = checkout -b
    unstage = reset HEAD
    cm = commit
    pu = !git push origin `git rev-parse --abbrev-ref HEAD`
    logtips = log --date=local --pretty='format:%C(yellow)%h %C(green)%cd %C(cyan)%an%C(red)%d %C(reset)%s' -16
    lgt = log --date=local --pretty='format:%C(yellow)%h %C(green)%cd %C(cyan)%an%C(red)%d %C(reset)%s' -10
    lgtopo = log --date=local --topo-order --pretty='format:%C(yellow)%h %C(green)%cd %C(cyan)%an%C(red)%d %C(reset)%s' -10
    slog = log --no-merges --date=local --pretty='format:%C(yellow)%h %C(green)%cd %C(cyan)%an%C(red)%d %C(reset)%s' -10
    rb = rebase
    rbi = rebase -i
    br = branch
    bra = branch -a
    br-clear = "!f() { git branch -d $1; git push origin :$1; };f"
    mg-revert = revert -m 1
    df-isc = diff --ignore-space-change
    df-files = diff-tree --no-commit-id --name-only -r
    ranking = "!f() { git shortlog -sn --no-merges --after='date +%Y/%m/01' --before='date +%Y/%m/%d' | cat -n; }; f"
    mile-to-master = "!f() { git fetch; git rev-list --no-merges --count ..origin/master; }; f"
    mile-to-dev = "!f() { git fetch; git rev-list --no-merges --count ..origin/develop; }; f"
[core]
	# excludesfile = /Users/xxx/.gitignore_global
[difftool "sourcetree"]
	cmd = opendiff \"$LOCAL\" \"$REMOTE\"
	path = 
[mergetool "sourcetree"]
	cmd = /Applications/Sourcetree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	trustExitCode = true
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
[commit]
	# template = /Users/xxx/.stCommitMsg
[init]
	defaultBranch = main
